--- a/drivers/media/dvb-core/dvb_frontend.h	2016-10-01 22:50:46.836708000 +0200
+++ b/drivers/media/dvb-core/dvb_frontend.h	2016-10-01 22:53:29.396708000 +0200
@@ -38,6 +38,7 @@
 #include <linux/mutex.h>
 #include <linux/slab.h>
 
+#include <linux/dvb/aml_demod.h>
 #include <linux/dvb/frontend.h>
 
 #include "dvbdev.h"
@@ -48,6 +49,11 @@
  */
 #define MAX_DELSYS	8
 
+#if (defined CONFIG_AM_M6_DEMOD)
+extern u32 dvbc_get_status(void);
+extern unsigned long atsc_read_iqr_reg(void);
+#endif
+
 struct dvb_frontend_tune_settings {
 	int min_delay_ms;
 	int step_size;
@@ -71,8 +77,16 @@
 struct analog_parameters {
 	unsigned int frequency;
 	unsigned int mode;
+	unsigned int soundsys;/* A2,BTSC/EIAJ/NICAM */
 	unsigned int audmode;
+	unsigned int lock_range;
+	unsigned int leap_step;
 	u64 std;
+	/*for amlatvdemod*/
+	unsigned int tuner_id;
+	unsigned int if_freq;
+	unsigned int if_inv;
+	unsigned int reserved;
 };
 
 enum dvbfe_modcod {
@@ -218,14 +232,21 @@
 
 #define TUNER_STATUS_LOCKED 1
 #define TUNER_STATUS_STEREO 2
-	int (*get_status)(struct dvb_frontend *fe, u32 *status);
+	int (*get_status)(struct dvb_frontend *fe, void *status);
+	void (*get_pll_status)(struct dvb_frontend *fe, void *status);
 	int (*get_rf_strength)(struct dvb_frontend *fe, u16 *strength);
 	int (*get_afc)(struct dvb_frontend *fe, s32 *afc);
+	int (*get_snr)(struct dvb_frontend *fe);
 
 	/** These are provided separately from set_params in order to facilitate silicon
 	 * tuners which require sophisticated tuning loops, controlling each parameter separately. */
 	int (*set_frequency)(struct dvb_frontend *fe, u32 frequency);
 	int (*set_bandwidth)(struct dvb_frontend *fe, u32 bandwidth);
+	int (*set_tuner)(struct dvb_frontend *fe,
+		struct aml_demod_sta *demod_sta,
+		struct aml_demod_i2c *demod_i2c,
+		struct aml_tuner_sys *tuner_sys);
+	int (*get_strength)(struct dvb_frontend *fe);
 
 	/*
 	 * These are provided separately from set_params in order to facilitate silicon
@@ -233,6 +254,12 @@
 	 */
 	int (*set_state)(struct dvb_frontend *fe, enum tuner_param param, struct tuner_state *state);
 	int (*get_state)(struct dvb_frontend *fe, enum tuner_param param, struct tuner_state *state);
+	/*add function to get tuner status*/
+	int (*get_tuner_status)(struct dvb_frontend *fe,
+				struct tuner_status_s *tuner_status);
+	/* add special fine tune function */
+	int (*fine_tune)(struct dvb_frontend *fe,
+				int offset_khz);
 };
 
 struct analog_demod_info {
@@ -245,8 +272,12 @@
 
 	void (*set_params)(struct dvb_frontend *fe,
 			   struct analog_parameters *params);
-	int  (*has_signal)(struct dvb_frontend *fe, u16 *signal);
-	int  (*get_afc)(struct dvb_frontend *fe, s32 *afc);
+	int (*has_signal)(struct dvb_frontend *fe, u16 *signal);
+	int (*get_afc)(struct dvb_frontend *fe, s32 *afc);
+	int (*is_stereo)(struct dvb_frontend *fe);
+	int (*get_snr)(struct dvb_frontend *fe);
+	int (*get_status)(struct dvb_frontend *fe, void *status);
+	void (*get_pll_status)(struct dvb_frontend *fe, void *status);
 	void (*tuner_status)(struct dvb_frontend *fe);
 	void (*standby)(struct dvb_frontend *fe);
 	void (*release)(struct dvb_frontend *fe);
@@ -254,10 +285,42 @@
 
 	/** This is to allow setting tuner-specific configuration */
 	int (*set_config)(struct dvb_frontend *fe, void *priv_cfg);
+	/* add function to get atv_demod & stereo_demod status */
+	int (*get_atv_status)(struct dvb_frontend *fe,
+				struct atv_status_s *atv_status);
+	int (*get_sd_status)(struct dvb_frontend *fe,
+				struct sound_status_s *sd_status);
 };
 
 struct dtv_frontend_properties;
 
+struct dvbsx_blindscan_info {
+	/* timeout of get blindscan event */
+	struct dvbsx_blindscanpara bspara;
+	int (*blindscan_callback)(struct dvb_frontend *fe,
+				  struct dvbsx_blindscanevent *pbsevent);
+};
+
+struct dvbsx_blindscan_ops {
+	struct dvbsx_blindscan_info info;
+
+	/*
+	 *  These are provided start and stop blindscan
+	 */
+	int (*blindscan_scan)(struct dvb_frontend *fe,
+			      struct dvbsx_blindscanpara *pbspara);
+	int (*blindscan_cancel)(struct dvb_frontend *fe);
+};
+
+struct dvb_frontend_asyncinfo {
+	int set_frontend_asyncenable;
+	int (*set_frontend_asyncpreproc)(struct dvb_frontend *fe);
+	/*return value = 1 interrupt, = 0 timeout,  = -1 error*/
+	int (*set_frontend_asyncwait)(struct dvb_frontend *fe, u32 timeout);
+	int (*set_frontend_asyncpostproc)(struct dvb_frontend *fe,
+					  int asyncwait_ret);
+};
+
 struct dvb_frontend_ops {
 
 	struct dvb_frontend_info info;
@@ -267,13 +330,13 @@
 	void (*release)(struct dvb_frontend* fe);
 	void (*release_sec)(struct dvb_frontend* fe);
 
-	int (*init)(struct dvb_frontend* fe);
-	int (*sleep)(struct dvb_frontend* fe);
+	int (*init)(struct dvb_frontend *fe);
+	int (*sleep)(struct dvb_frontend *fe);
 
-	int (*write)(struct dvb_frontend* fe, const u8 buf[], int len);
+	int (*write)(struct dvb_frontend *fe, const u8 buf[], int len);
 
 	/* if this is set, it overrides the default swzigzag */
-	int (*tune)(struct dvb_frontend* fe,
+	int (*tune)(struct dvb_frontend *fe,
 		    bool re_tune,
 		    unsigned int mode_flags,
 		    unsigned int *delay,
@@ -283,20 +346,23 @@
 
 	/* these two are only used for the swzigzag code */
 	int (*set_frontend)(struct dvb_frontend *fe);
-	int (*get_tune_settings)(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* settings);
-
+	int (*get_tune_settings)(struct dvb_frontend *fe,
+				 struct dvb_frontend_tune_settings *settings);
 	int (*get_frontend)(struct dvb_frontend *fe);
 
-	int (*read_status)(struct dvb_frontend* fe, fe_status_t* status);
-	int (*read_ber)(struct dvb_frontend* fe, u32* ber);
-	int (*read_signal_strength)(struct dvb_frontend* fe, u16* strength);
-	int (*read_snr)(struct dvb_frontend* fe, u16* snr);
-	int (*read_ucblocks)(struct dvb_frontend* fe, u32* ucblocks);
-
-	int (*diseqc_reset_overload)(struct dvb_frontend* fe);
-	int (*diseqc_send_master_cmd)(struct dvb_frontend* fe, struct dvb_diseqc_master_cmd* cmd);
-	int (*diseqc_recv_slave_reply)(struct dvb_frontend* fe, struct dvb_diseqc_slave_reply* reply);
-	int (*diseqc_send_burst)(struct dvb_frontend* fe, fe_sec_mini_cmd_t minicmd);
+	int (*read_status)(struct dvb_frontend *fe, fe_status_t *status);
+	int (*read_ber)(struct dvb_frontend *fe, u32 *ber);
+	int (*read_signal_strength)(struct dvb_frontend *fe, u16 *strength);
+	int (*read_snr)(struct dvb_frontend *fe, u16 *snr);
+	int (*read_ucblocks)(struct dvb_frontend *fe, u32 *ucblocks);
+	int (*set_qam_mode)(struct dvb_frontend *fe);
+	int (*diseqc_reset_overload)(struct dvb_frontend *fe);
+	int (*diseqc_send_master_cmd)(struct dvb_frontend *fe,
+				      struct dvb_diseqc_master_cmd *cmd);
+	int (*diseqc_recv_slave_reply)(struct dvb_frontend *fe,
+				       struct dvb_diseqc_slave_reply *reply);
+	int (*diseqc_send_burst)(struct dvb_frontend *fe,
+				 fe_sec_mini_cmd_t minicmd);
 	int (*set_tone)(struct dvb_frontend* fe, fe_sec_tone_mode_t tone);
 	int (*set_voltage)(struct dvb_frontend* fe, fe_sec_voltage_t voltage);
 	int (*enable_high_lnb_voltage)(struct dvb_frontend* fe, long arg);
@@ -309,15 +375,23 @@
 	 * tuning algorithms, rather than a simple swzigzag
 	 */
 	enum dvbfe_search (*search)(struct dvb_frontend *fe);
-
+	int (*track)(struct dvb_frontend *fe,
+		     struct dvb_frontend_parameters *p);
 	struct dvb_tuner_ops tuner_ops;
 	struct analog_demod_ops analog_ops;
 
-	int (*set_property)(struct dvb_frontend* fe, struct dtv_property* tvp);
-	int (*get_property)(struct dvb_frontend* fe, struct dtv_property* tvp);
+	int (*set_property)(struct dvb_frontend *fe, struct dtv_property *tvp);
+	int (*get_property)(struct dvb_frontend *fe, struct dtv_property *tvp);
+
+	struct dvbsx_blindscan_ops blindscan_ops;
+
+	int (*set_mode)(struct dvb_frontend *fe, fe_type_t type);
+	int (*read_ts)(struct dvb_frontend *fe, int *ts);
+	int (*read_dtmb_fsm)(struct dvb_frontend *fe, u32 *fsm_status);
+
+	struct dvb_frontend_asyncinfo asyncinfo;
 };
 
-#ifdef __DVB_CORE__
 #define MAX_EVENT 8
 
 struct dvb_fe_events {
@@ -328,7 +402,17 @@
 	wait_queue_head_t	  wait_queue;
 	struct mutex		  mtx;
 };
-#endif
+
+#define MAX_BLINDSCAN_EVENT 32
+
+struct dvbsx_blindscan_events {
+	struct dvbsx_blindscanevent events[MAX_BLINDSCAN_EVENT];
+	int			  eventw;
+	int			  eventr;
+	int			  overflow;
+	wait_queue_head_t	  wait_queue;
+	struct mutex		  mtx;
+};
 
 struct dtv_frontend_properties {
 
@@ -344,7 +428,7 @@
 	fe_code_rate_t		fec_inner;
 	fe_transmit_mode_t	transmission_mode;
 	u32			bandwidth_hz;	/* 0 = AUTO */
-	fe_guard_interval_t	guard_interval;
+	fe_guard_interval_t guard_interval;
 	fe_hierarchy_t		hierarchy;
 	u32			symbol_rate;
 	fe_code_rate_t		code_rate_HP;
@@ -353,6 +437,8 @@
 	fe_pilot_t		pilot;
 	fe_rolloff_t		rolloff;
 
+	enum fe_ofdm_mode      ofdm_mode;
+
 	fe_delivery_system_t	delivery_system;
 
 	enum fe_interleaving	interleaving;
@@ -374,6 +460,11 @@
 	/* Multistream specifics */
 	u32			stream_id;
 
+	u32         dvbt2_plp_id;
+
+	/* Analog specifics */
+	struct dvb_analog_parameters analog;
+	struct dvb_analog_parameters param;
 	/* ATSC-MH specifics */
 	u8			atscmh_fic_ver;
 	u8			atscmh_parade_id;
